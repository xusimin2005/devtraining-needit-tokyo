<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_58872_needit.TestScope</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>TestScope</name>
        <script><![CDATA[var TestScope = Class.create();
TestScope.prototype = {
    initialize: function() {
    },

	test: function(uploadFileName, uploadFileType, upd) {
		gs.info("MyDebug -INFO- test global function");
		/*
		(1) Step One: Create Data Source (Record)
		- Data Scources[sys_data_source]
		*/
		var dsr = null;
		var ds = new GlideRecord('sys_data_source');
		ds.initialize();
		ds.name = 'Tenable_Adhoc_Scan';
		ds.import_set_table_label = 'Tenable Adhoc Scan';
		ds.import_set_table_name = 'u_tenable_adhoc_scan'; //Custom table: Extends 'Import Set Row'
		ds.type = "File";
		ds.format = 'Csv';
		ds.zipped = false;
		ds.file_retrieval_method = "Attachment";
		ds.header_row = 1;
		ds.sheet_number = 1;
		dsr = ds.insert();
		gs.info('MyDebug -INFO- Data Source ->' + dsr); //Sys_ID of Data Source

		/*
		(2) Step Two: Attach file for processing to the record in Step One.
		This is a made up example where we copy an existing attachment from Incident to the Data Source created above
		*/
		var rec = new GlideRecord('sys_data_source');
		rec.get(dsr);
		var gsa = new global.GlideSysAttachment();
		var base64String = upd.substring(upd.indexOf("base64,")+7);
		//var base64String = 'SSBhbSB0ZXh0Lg==';
		var attachmentId = gsa.writeBase64(rec, uploadFileName, uploadFileType, base64String);
		gs.info('MyDebug -INFO- The attachment sys_id ->' + attachmentId);
	},

    type: 'TestScope'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-29 13:11:01</sys_created_on>
        <sys_id>37de819e93034610868ab4de3bba10a1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TestScope</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_37de819e93034610868ab4de3bba10a1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-29 13:11:01</sys_updated_on>
    </sys_script_include>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</application>
        <file_path/>
        <instance_id>38594d971b4a7dd039a54089bd4bcb9f</instance_id>
        <instance_name>dev196248</instance_name>
        <name>sys_script_include_37de819e93034610868ab4de3bba10a1</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_58872_needit.TestScope&lt;/api_name&gt;&lt;caller_access/&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;description/&gt;&lt;name&gt;TestScope&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var TestScope = Class.create();
TestScope.prototype = {
    initialize: function() {
    },

	test: function(uploadFileName, uploadFileType, upd) {
		gs.info("MyDebug -INFO- test global function");
		/*
		(1) Step One: Create Data Source (Record)
		- Data Scources[sys_data_source]
		*/
		var dsr = null;
		var ds = new GlideRecord('sys_data_source');
		ds.initialize();
		ds.name = 'Tenable_Adhoc_Scan';
		ds.import_set_table_label = 'Tenable Adhoc Scan';
		ds.import_set_table_name = 'u_tenable_adhoc_scan'; //Custom table: Extends 'Import Set Row'
		ds.type = "File";
		ds.format = 'Csv';
		ds.zipped = false;
		ds.file_retrieval_method = "Attachment";
		ds.header_row = 1;
		ds.sheet_number = 1;
		dsr = ds.insert();
		gs.info('MyDebug -INFO- Data Source -&gt;' + dsr); //Sys_ID of Data Source

		/*
		(2) Step Two: Attach file for processing to the record in Step One.
		This is a made up example where we copy an existing attachment from Incident to the Data Source created above
		*/
		var rec = new GlideRecord('sys_data_source');
		rec.get(dsr);
		var gsa = new global.GlideSysAttachment();
		var base64String = upd.substring(upd.indexOf("base64,")+7);
		//var base64String = 'SSBhbSB0ZXh0Lg==';
		var attachmentId = gsa.writeBase64(rec, uploadFileName, uploadFileType, base64String);
		gs.info('MyDebug -INFO- The attachment sys_id -&gt;' + attachmentId);
	},

    type: 'TestScope'
};]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-06-29 13:11:01&lt;/sys_created_on&gt;&lt;sys_id&gt;37de819e93034610868ab4de3bba10a1&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;TestScope&lt;/sys_name&gt;&lt;sys_package display_value="NeedIt" source="x_58872_needit"&gt;6ead8e780f603200cd674f8ce1050ed1&lt;/sys_package&gt;&lt;sys_policy&gt;read&lt;/sys_policy&gt;&lt;sys_scope display_value="NeedIt"&gt;6ead8e780f603200cd674f8ce1050ed1&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_37de819e93034610868ab4de3bba10a1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-06-29 13:11:01&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1172758908</payload_hash>
        <record_name>TestScope</record_name>
        <reverted_from/>
        <source>af21a82093b84210868ab4de3bba101c</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-29 13:11:01</sys_created_on>
        <sys_id>c7cfc91293434610868ab4de3bba1099</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>190641eda500000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-29 13:11:01</sys_updated_on>
        <type>Script Include</type>
        <update_guid>8bcfc9121d434610f996c6bd5514d598</update_guid>
        <update_guid_history>8bcfc9121d434610f996c6bd5514d598:1172758908</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-07-01 02:59:47</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>5703b473fff149a78846929f7f36e031</sys_id>
        <sys_metadata>37de819e93034610868ab4de3bba10a1</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>TestScope</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_scope_delete display_value="">94872a8897db403e8ee69a431de2fca4</sys_scope_delete>
        <sys_update_name>sys_script_include_37de819e93034610868ab4de3bba10a1</sys_update_name>
        <sys_update_version display_value="sys_script_include_37de819e93034610868ab4de3bba10a1">c7cfc91293434610868ab4de3bba1099</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-07-01 02:59:47</sys_updated_on>
    </sys_metadata_delete>
</record_update>
